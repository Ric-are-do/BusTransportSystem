@inject AdministratorServices administratorServices
@inject StudentService studentsServices;
@inject BusRoutServices busRoutServices;
@page "/AdministarotPage/DisplayStudentsOnBus"
@using BusServiceApplication.HelperMethods;
@inject NavigationManager navigationManager;


<div class="container mt-4" style="background-color: #A4C1EC;">
    <h1 class="text-center mb-4">List of students using busses</h1>
    <p class="text-center mb-4">Below is a list of students on each bus </p>
    <p class ="text-center mb-4"> By clicking the delte button you remove the students from the bus list </p>
</div>


<div class="container mt-4">
    <div class="border">
        <h1 class="text-center mb-4">Morning Bus</h1>
        <!-- Morning Bus Section -->
        @foreach (var busNumber in Enumerable.Range(1, 3))
        {
            <h2 class="text-center mb-3">Bus @busNumber  </h2>
            <table class="table table-striped table-hover table-sm text-center">
                <thead class="table-primary">
                    <tr>
                        <th>ChildID</th>
                        <th>Name</th>
                        <th>Surname</th>
                        <th>Grade</th>
                        <th>CellNumber</th>
                        <th>Area</th>
                        <th>Bus Number</th>
                        <th>Start Date</th>
                        <th>End Date</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var MorningItem in studnetsOnMorningBus.Where(item => item.BusNumber == busNumber))
                    {
                        <tr>
                            <td>@MorningItem.ChildUserNameId</td>
                            <td>@childUserName(MorningItem.ChildUserNameId).Name</td>
                            <td>@childUserName(MorningItem.ChildUserNameId).Surname</td>
                            <td>@childUserName(MorningItem.ChildUserNameId).Grade</td>
                            <td>@childUserName(MorningItem.ChildUserNameId).CellphoneNumber</td>
                            <td>@MorningItem.Area</td>
                            <td>@MorningItem.BusNumber</td>
                            <td>@MorningItem.TakingBusStartDate</td>
                            <td>@MorningItem.TakingBusEndDate</td>
                            <td>
                                <button class="btn btn-danger btn-sm" @onclick="() => DeleteRecordFromMorningBus(MorningItem.ChildUserNameId, MorningItem.BusNumber)">Delete</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    </div>

    <div class="border mt-4">
        <h1 class="text-center mb-4">Afternoon Bus</h1>
        <!-- Afternoon Bus Section -->
        @foreach (var busNumber in Enumerable.Range(1, 3))
        {
            <h2 class="text-center mb-3">Bus @busNumber</h2>
            <table class="table table-striped table-hover text-center">
                <thead class="table-primary">
                    <tr>
                        <th>ChildID</th>
                        <th>Name</th>
                        <th>Surname</th>
                        <th>Grade</th>
                        <th>CellNumber</th>
                        <th>Area</th>
                        <th>Bus Number</th>
                        <th>Start Date</th>
                        <th>End Date</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var AfternoonItem in studentsOnAfternoonBus.Where(item => item.BusNumber == busNumber))
                    {
                        <tr>
                            <td>@AfternoonItem.ChildUserNameId</td>
                            <td>@childUserName(AfternoonItem.ChildUserNameId).Name</td>
                            <td>@childUserName(AfternoonItem.ChildUserNameId).Surname</td>
                            <td>@childUserName(AfternoonItem.ChildUserNameId).Grade</td>
                            <td>@childUserName(AfternoonItem.ChildUserNameId).CellphoneNumber</td>
                            <td>@AfternoonItem.Area</td>
                            <td>@AfternoonItem.BusNumber</td>
                            <td>@AfternoonItem.TakingBusStartDate</td>
                            <td>@AfternoonItem.TakingBusEndDate</td>
                            
                            <td>
                                <button class="btn btn-danger btn-sm" @onclick="() => DeleteRecordFromAfternoonBus(AfternoonItem.ChildUserNameId, AfternoonItem.BusNumber)">Delete</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    </div>
</div>



@code {

    public List<BusDetailsMorning> studnetsOnMorningBus = new List<BusDetailsMorning>();
    public List<BusDetailsAfternoon> studentsOnAfternoonBus = new List<BusDetailsAfternoon>();
    public List<StudentDetails> studnetDetails = new List<StudentDetails>();
    public StudentDetails thisStudent = new StudentDetails();


    protected override async Task OnInitializedAsync()
    {
        studnetsOnMorningBus = busRoutServices.GetListOfStudentsOnMorningBus();
        studentsOnAfternoonBus = busRoutServices.GetListOfStudentsOnAfternoonBus();
    }

    public StudentDetails childUserName(string userName)
    {
        var thisStudentsDetails = studentsServices.GetStudentObjectByChildUserNameID(userName);
        return thisStudentsDetails;

    }

   

    public void DeleteRecordFromMorningBus(string childUserId, int busNumber)
    {
        busRoutServices.DeleteStudentFromBusRoutMorning(childUserId, busNumber);
        // Refresh the data after deletion
        Refresh();
    }

    public void DeleteRecordFromAfternoonBus(string childUserId, int busNumber)
    {
        busRoutServices.DeleteStudentFromBusRoutAfternoon(childUserId, busNumber);
        // Refresh the data after deletion
        Refresh();
    }

    public void Refresh()
    {
        var refreshPage = new RefreshPage(navigationManager);
        refreshPage.refreshApplication();
    }

}
